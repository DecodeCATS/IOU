FORMAT: 1A

# IOU
The IOU API allows the management of money owed between connections.

## Notifications [/notifications]
List of notification events

### GET list of notifications for the current user [GET /notifications]
+ Request (application/json)
    + Headers

            Authorization: token xyz

+ Response 200 (application/json)
    + Attributes
        - notifications (array[Notification, Notification2])

### DELETE a notification [DELETE /notifications]
+ Request (application/json)
    + Headers

            Authorization: token xyz

+ Attributes
    - notificationId: 1000 (number)
    
+ Response 204

## Contracts [/contracts]
A contract represents an IOU or fullly defined contract between 2 users

### GET a list of active contracts for the current user [GET /contracts]
+ Request (application/json)
    + Headers

            Authorization: token xyz

+ Response 200 (application/json)
    + Attributes
        - contracts (array[Contract2, Contract4, Contract5, Contract6Proposal, ContractUpdate])


### GET a contract history from a contractId [GET /contracts/{id}]
+ Parameters
    - id: 98 (number, required) - The ID of the desired contract

+ Response 200 (application/json)
    + Attributes
        - contracts (array[ContractUpdate, Contract])


### Create a new contract [POST /contracts]
Contract will be created automatically for a company is one of the counterparties.
Contract will be proposed if a person is the counterparty or if payee is empty.
+ Request (application/json)
    + Headers

            Authorization: token xyz

    + Attributes (ContractCreate)

+ Response 201 (application/json)
    + Attributes
        - contract (Contract3)

### Delete an owned contract [DELETE /contracts/{id}]
+ Parameters
    - id: 90 (number, required) - The unique ID of the contract to be deleted

+ Request
    + Headers

            Authorization: token xyz

+ Response 204

### Modify an owned contract [PATCH /contracts/{id}]
+ Parameters
    - id: 90 (number, required) - The unique ID of the contract to be updated

+ Request (application/json)
    + Headers

            Authorization: token xyz

    + Attributes (Contract)

+ Response 200 (application/json)
    + Attributes (ContractUpdate)

## Contract Proposals [/contracts/proposals]
### List contract proposals available to the user[GET /contracts/proposals]
+ Request (application/json)
    + Headers

            Authorization: token xyz
+ Response 201 (application/json)
    + Attributes
        - proposals (array[Contract6Proposal, Contract7Proposal])

### Accept a contract proposal [POST /contracts/proposals]
+ Request (application/json)
    + Headers

            Authorization: token xyz

+ Attributes
    - contractId: 92 (number, required) - contract id

+ Response 201 (application/json)
    + Attributes (Contract3)

## Contract Payments [/payments]
### List active payments for the user[GET /payments/active]
+ Request (application/json)
    + Headers
    
            Authorization: token xyz

+ Response 200 (application/json)
    + Attributes
        - payments (array[Payment102, Payment103, Payment201, Payment202, Payment401])

### List payments of a contract[GET /payments/contracts/{contractId}]
+ Parameter
    - contractId: 90 (number) - The parent contract's ID
+ Request (application/json)
    + Headers
    
            Authorization: token xyz

+ Response 200 (application/json)
    + Attributes
        - payments (array[Payment101, Payment102, Payment103])

### Add a payment to a contract[POST /payments/contracts]
+ Request (application/json)
    + Headers
    
            Authorization: token xyz
            
    + Attributes (PaymentCreate)

+ Response 200 (application/json)
    + Attributes (PaymentCreated)

### Modify a payment[PATCH /payments]
+ Request (application/json)
    + Headers
    
            Authorization: token xyz
            
+ Attributes
    - paymentId: 111 (number, required) - The unique ID of the payment to be updated
    - type: `payment` (string) - type of payment (enum)
    - amount: 55555 (number) - payment amount (in cents)
    - dueDate: `2017-08-01` - due date
    - paidDate: `2017-07-31` - paid date

+ Response 200 (application/json)
    + Attributes (Payment401Updated)

### Remove a payment[DELETE /payments]
+ Request (application/json)
    + Headers
    
            Authorization: token xyz
            
+ Attributes
    + paymentId: 401 (number, required)

+ Response 204 (application/json)

## Connections [/connections]

### Get the list of connections who are users [GET /connections]
+ Request (application/json)
    + Headers
    
            Authorization: token xyz

+ Response 200 (application/json)
    + Attributes
        - users (array[User2, User3])
        

### Get the list of connections who are organisations [GET /connections/organisations]
+ Request (application/json)
    + Headers
    
            Authorization: token xyz

+ Response 200 (application/json)
    + Attributes
        - users (array[User4])

### Search for a connection [POST /connections/search]
+ Request (application/json)
    + Headers

            Authorization: token xyz

+ Attributes
    - userName: `7` (string) - The username
    - firstName: `John` (string) - The firstname
    - lastName: `Doe` (string) - The lastname
    - email: `@S` (string) - The email address of the connection

+ Response 200 (application/json)
    + Attributes
        - users (array[User, User2, User4,User5])

### Request a new connection [POST /connections/request]
+ Request (application/json)
    + Headers

            Authorization: token xyz
            
+ Attributes
    - userId: 5 (number) - The ID of the desired connection

+ Response 204 (application/json)

### Accept a new connection [POST /connections/accept]
+ Request (application/json)
    + Headers

            Authorization: token xyz

+ Attributes
    - userId: 5 (number) - The ID of the desired connection
    
+ Response 200 (application/json)
    + Attributes
        - users (array[User2, User3, User5])

### Remove a connection [DELETE /connections]
+ Request (application/json)
    + Headers

            Authorization: token xyz
            
+ Attributes
    - userId: 5
            
+ Response 204


## Connections Blacklist [/connections/blacklist]

### GET notification blacklist for the current user [GET /connections/blacklist]
+ Request (application/json)
    + Headers

            Authorization: token xyz

+ Response 200 (application/json)
    + Attributes
        - blacklist (array[User7])

### Add a user to the notification blacklist [POST /connections/blacklist]
+ Request (application/json)
    + Headers

            Authorization: token xyz
            
+ Attributes
    - userId: 5 (number) - userId to blacklist
            
+ Response 201 (application/json)
    + Attributes
        - blacklist (array[User5])

### DELETE a user from the notification blacklist [DELETE /connections/blacklist]
+ Request (application/json)
    + Headers

            Authorization: token xyz
            
+ Attributes
    - userId: 5
    
+ Response 204

## Currencies [/currencies]
### Get currencies [GET /currencies]
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes
        - currencies (array[CurrencyCAD, CurrencyEUR, CurrencyJPY])

## Authentication [/auth]

### Create a new user (signup) [POST /auth/users]
+ Request (application/json)
    + Attributes (UserCreate)

+ Response 204 (application/json)

### Create a new session (login) [POST /auth/sessions]
+ Request (application/json)
    + Attributes (AuthData)

+ Response 201 (application/json)
    + Attributes (Session)


### Delete a session (logout) [DELETE /auth/sessions]
+ Request (application/json)
    + Headers

            Authorization: token xyz

+ Response 204



### Retrieve current user [GET /auth/me]
+ Request
    + Headers
    
            Authorization: token xyz

+ Response 200 (application/json)
    + Attributes (UserFull)




# Data Structures

## Notification (object)
- id: 1000 (number, required) - The unique ID of the notification
- message: `Payment made` (string) - The message
- objectId: 101 (number) - The unique id of the object
- objectType: payments (string) - The object source of the id
- senderId: 2 (number) - the userID of the sender
- Include Timestamps

## Notification2 (object)
- id: 1001 (number, required) - The unique ID of the notification
- message: `Connection Request` (string) - The message
- objectId: 5 (number) - The unique id of the object
- objectType: users (string) - The object source of the id
- senderId: 5 (number, required) - the userID of the sender
- Include Timestamps

## Contract (object)
- id: 90 (number, required) - The unique Id of the contract
- parentId: 90 (number) - The contractId of the parent
- title: `Test contract between userId 2 and 1` (string, required) - Contract title
- description: `` (string) - Description
- totalAmount: 2000 (number) - Total amount
- remainingAmount: 1000 (number) - The remaining amount
- numberOfPayments: 2 - Number of payments
- paymentFrequency: 'monthly' - Frequency of payments
- dueDate: ''
- acceptedDate: '2017-01-01'
- status: 'active' - Current status of the contract
- payerId: 2 (number) - The payer (money out)
- payeeId: 1 (number) - The payee (money in)
- Include Timestamps

## ContractUpdate (object)
- id: 98 (number, required) - The unique ID of the contract
- parentId: 90 (number) - The contractId of the parent
- title: `Consolidated contractId 90, userId 2 and 3` (string, required) - Contract title
- description: `New description updated` (string) - Description
- totalAmount: 1000 (number) - Total amount
- remainingAmount: 1000 (number) - The remaining amount
- numberOfPayments: 1 - Number of payments
- paymentFrequency: 'monthly' - Frequency of payments
- dueDate: '2017-09-01'
- acceptedDate: '2017-04-01'
- status: 'active' - Current status of the contract
- payerId: 2 (number) - The payer (money out)
- payeeId: 1 (number) - The payee (money in)
- Include Timestamps

## Contract2 (object)
- id: 91 (number, required) - The unique ID of the contract
- parentId: 91
- title: `Test contract between userId 1 and 3` (string, required) - Contract title
- description: `` (string) - Description
- totalAmount: 1000 (number) - Total amount
- remainingAmount: 1000 (number) - The remaining amount
- numberOfPayments: 1 - Number of payments
- paymentFrequency: 'one-time' - Frequency of payments
- dueDate: '2017-09-01'
- acceptedDate: '2017-04-01'
- status: 'active' - Current status of the contract
- payerId: 1 (number) - The userId of the payer (money out)
- payeeId: 3 (number) - The userId of the payee (money in)
- Include Timestamps

## Contract3 (object)
- id: 92 (number, required) - The unique ID of the contract
- parentId: 92
- title: `Test contract proposal` (string, required) - Contract title
- description: `` (string) - Description
- totalAmount: 5000 (number) - Total amount
- remainingAmount: 5000 (number) - The remaining amount
- numberOfPayments: 1 - Number of payments
- paymentFrequency: 'monthly' - Frequency of payments
- dueDate: '2017-10-01'
- acceptedDate: '2017-04-01'
- status: 'pending' - Current status of the contract
- payerId: 3 (number) - The payer (money out)
- payeeId: null - The payee (money in)
- Include Timestamps

## Contract4 (object)
- id: 93 (number, required) - The unique ID of the contract
- parentId: 93
- title: `Test contract with an Org` (string, required) - Contract title
- description: `` (string) - Description
- totalAmount: 000 (number) - Total amount
- remainingAmount: 0 (number) - The remaining amount
- numberOfPayments: 12 - Number of payments
- paymentFrequency: 'monthly' - Frequency of payments
- dueDate: '2017-09-01'
- acceptedDate: '2017-01-01'
- status: 'active' - Current status of the contract
- payerId: 1 (number) - The payer (money out)
- payeeId: 4 (number) - The payee (money in)
- Include Timestamps

## Contract5 (object)
- id: 94 (number, required) - The unique ID of the contract
- parentId: 94
- title: `Test contract` (string, required) - Contract title
- description: `` (string) - Description
- totalAmount: 000 (number) - Total amount
- remainingAmount: 0 (number) - The remaining amount
- numberOfPayments: 12 - Number of payments
- paymentFrequency: 'monthly' - Frequency of payments
- dueDate: '2017-09-01'
- acceptedDate: '2017-01-01'
- status: 'active' - Current status of the contract
- payerId: 1 (number) - The userId of the payer (money out)
- payeeId: 6 (number) - The userId of the payee (money in) - Bell
- Include Timestamps

## Contract6Proposal (object)
- id: 95 (number, required) - The unique ID of the contract
- parentId: 95
- title: `Requested contract proposal` (string, required) - Contract title
- description: `` (string) - Description
- totalAmount: 000 (number) - Total amount
- remainingAmount: 0 (number) - The remaining amount
- numberOfPayments: 12 - Number of payments
- paymentFrequency: 'monthly' - Frequency of payments
- dueDate: '2017-09-01'
- acceptedDate: '2017-01-01'
- status: 'active' - Current status of the contract
- payerId: 1 (number) - The userId of the payer (money out)
- payeeId: 2 (number) - The userId of the payee (money in)
- Include Timestamps

## Contract7Proposal (object)
- id: 96 (number, required) - The unique ID of the contract
- parentId: 96
- title: `Open contract proposal 2` (string, required) - Contract title
- description: `` (string) - Description
- totalAmount: 000 (number) - Total amount
- remainingAmount: 0 (number) - The remaining amount
- numberOfPayments: 12 - Number of payments
- paymentFrequency: 'monthly' - Frequency of payments
- dueDate: '2017-09-01'
- acceptedDate: '2017-01-01'
- status: 'pending' - Current status of the contract
- payerId: `` - The payer (money out)
- payeeId: 5 (number) - The payee (money in)
- Include Timestamps

## User (object)
- id: 1 (number) - The unique ID of the user
- username: `User1` (string) - The username
- firstName: `John` (string, required) - The firstname of the user
- lastName: `Doe` (string) - The lastname of the user
- type: `person` - The user type
- Include Timestamps

## User2 (object)
- id: 2 (number) - The unique ID of the user
- username: `User2` - The username
- firstName: `Jane` (string, required) - The firstname of the user
- lastName: `Doe` (string) - The lastname of the user
- type: `person` - The user type
- Include Timestamps

## User3 (object)
- id: 3 (number) - The unique ID of the user
- username: `User3` - The username
- firstName: `Bob` (string, required) - The firstname of the user
- lastName: `Rob` (string) - The lastname of the user
- type: `person` - The user type
- Include Timestamps

## User4 (object)
- id: 4 (number) - The unique ID of the user
- username: `Hydro-Quebec` - The username
- firstName: `Hydro-Quebec` (string, required) - The name of the Organisation
- lastName: `` (string) - Should be null for an organisation
- type: `organisation` - The user type
- Include Timestamps

## User5 (object)
- id: 5 (number) - The unique ID of the user
- username: `User5` - The username
- firstName: `Lisa` (string, required) - The firstname of the user
- lastName: `Simpson` (string) - The lastname of the user
- type: `person` - The user type
- Include Timestamps

## User6 (object)
- id: 6 (number) - The unique ID of the user
- username: `Bell` - The username
- firstName: `Bell Canada` (string, required) - The name of the Organisation
- lastName: `` (string) - Should be null for an organisation
- type: `organisation` - The user type
- Include Timestamps

## User7 (object)
- id: 7 (number) - The unique ID of the user
- username: `Tom` - The username
- firstName: `Jerry` (string, required) - The name of the Organisation
- lastName: `` (string) - Should be null for an organisation
- type: `person` - The user type
- Include Timestamps


## UserFull (object)
- Include User
- Include UserInfo
- Include Timestamps

## UserFull2 (object)
- Include User2
- Include UserInfo2
- Include Timestamps

## UserFull3 (object)
- Include User3
- Include UserInfo3
- Include Timestamps

## UserFull4 (object)
- Include User4
- Include UserInfoOrg
- Include Timestamps

## UserFull5 (object)
- Include User5
- Include UserInfo5
- Include Timestamps

## UserFull6 (object)
- Include User6
- Include UserInfoOrg2
- Include Timestamps

## UserInfo (object)
- description: `` (string) - The description of the user
- email: `John@Doe.com` (string) - The email of the user
- avatarUrl: `https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50` (string) - The profile pic of the user

## UserInfo2 (object)
- description: `` (string) - The description of the user
- email: `Jane@Doe.com` (string) - The email of the user
- avatarUrl: `` (string) - The profile pic of the user


## UserInfo3 (object)
- description: `` (string) - The description of the user
- email: `Bob@Rob.com` (string) - The email of the user
- avatarUrl: `` (string) - The profile pic of the user

## UserInfoOrg (object)
- description: `Electricity company` (string) - The description of the Organisation
- email: `` (string) - The email of the Organisation
- avatarUrl: `` (string) - The profile pic of the Organisation

## UserInfo5 (object)
- description: `` (string) - The description of the user
- email: `Lisa@Simpson.com` (string) - The email of the user
- avatarUrl: `` (string) - The profile pic of the user

## UserInfoOrg2 (object)
- description: `Telecom company` (string) - The description of the Organisation
- email: `` (string) - The email of the Organisation
- avatarUrl: `` (string) - The profile pic of the Organisation

## Payment101
- paymentId: 101 (number) - unique ID of the payment
- contractId: 90 (number) - contract ID for this payment
- type: `payment` (string) - type of payment (enum)
- amount: 1000 (number) - payment amount (in cents)
- status: `active` (string) - status of the payment (enum)
- dueDate: `2017-08-01` (string) - due date
- paidDate: `2017-07-31` (string) - paid date
- Include Timestamps

## Payment102
- paymentId: 102 (number) - unique ID of the payment
- contractId: 90 (number) - contract ID for this payment
- type: `payment` (string) - type of payment (enum)
- amount: 1000 (number) - payment amount (in cents)
- status: `active` (string) - status of the payment (enum)
- dueDate: `2017-08-01` (string) - due date
- paidDate: `` (string) - paid date
- Include Timestamps

## Payment103
- paymentId: 103 (number) - unique ID of the payment
- contractId: 90 (number) - contract ID for this payment
- type: `payment` (string) - type of payment (enum)
- amount: 1000 (number) - payment amount (in cents)
- status: `active` (string) - status of the payment (enum)
- dueDate: `2017-09-01` (string) - due date
- paidDate: `` (string) - paid date
- Include Timestamps

## Payment201
- paymentId: 201 (number) - unique ID of the payment
- contractId: 91 (number) - contract ID for this payment
- type: `payment` (string) - type of payment (enum)
- amount: `1000` (number) - payment amount (in cents)
- status: `active` (string) - status of the payment (enum)
- dueDate: `2017-09-01` (string) - due date
- paidDate: `` (string) - paid date
- Include Timestamps

## Payment202
- paymentId: 202 (number) - unique ID of the payment
- contractId: 91 (number) - contract ID for this payment
- type: `payment` (string) - type of payment (enum)
- amount: 1000 (number) - payment amount (in cents)
- status: `active` (string) - status of the payment (enum)
- dueDate: `2017-10-01` (string) - due date
- paidDate: `` (string) - paid date
- Include Timestamps

## Payment401
- paymentId: 111 (number) - unique ID of the payment
- contractId: 94 (number) - contract ID for this payment
- type: `payment` (string) - type of payment (enum)
- amount: 63376 (number) - payment amount (in cents)
- status: `active` (string) - status of the payment (enum)
- dueDate: `2017-08-01` (string) - due date
- paidDate: `` (string) - paid date
- Include Timestamps

## Payment401Updated
- paymentId: 111 (number) - unique ID of the payment
- contractId: 94 (number) - contract ID for this payment
- type: `payment` (string) - type of payment (enum)
- amount: 55555 (number) - payment amount (in cents)
- status: `paid` (string) - status of the payment (enum)
- dueDate: `2017-08-01` (string) - due date
- paidDate: `2017-07-31` (string) - paid date
- Include Timestamps

## PaymentCreate
- contractId: 94 (number) - contract ID for this payment
- type: `payment` (string) - Payment type (payment, interest)
- amount: 47312 (number) - payment amount (in cents)
- currencyId: 1 (number) - payment currency
- status: `active` (string) - status of the payment (enum)
- dueDate: `2017-09-01` (string) - due date
- paidDate: `2017-08-31` (string) - paid date

## PaymentCreated
- paymentId: 121 (number) - unique ID of the payment
- contractId: 94 (number) - contract ID for this payment
- type: `payment` (string) - type of payment (enum)
- amount: 47312 (number) - payment amount (in cents)
- currencyId: 1 (number) - payment currency
- status: `active` (string) - status of the payment (enum)
- dueDate: `2017-09-01` (string) - due date
- paidDate: `2017-08-31` (string) - paid date
- Include Timestamps

## Timestamps (object)
- createdAt: `2015-01-20T09:48:32.066Z` (string) - The creation date
- updatedAt: `2017-05-04T14:29:42.490Z` (string) - The last update date

## UserCreate (object)
- userName: `a@b.com`
- firstName: `John`
- lastName: `Smith`
- password: `js`
- email: `John@Smith.com`
- description: ``
- avatarUrl: `https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50`

## ContractCreate (object)
- title: `Test contract between userId 2 and 1` (string, required) - Contract title
- description: `` (string) - Description
- totalAmount: 5000 (number) - Total amount
- numberOfPayments: 1 - Number of payments
- paymentFrequency: 'monthly' - Frequency of payments
- dueDate: ''
- payerId: 3 (number) - The payer (money out)
- payeeId: '' - The payee (money in)

## CurrencyCAD (object)
- currencyID: 1 (number)
- name: Canadian Dollar (string)
- symbol: $ (string)

## CurrencyEUR (object)
- currencyID: 2 (number)
- name: Euro (string)
- symbol: € (string)

## CurrencyJPY (object)
- currencyID: 3 (number)
- name: Japanese Yen (string)
- symbol: ¥ (string)

## AuthData (object)
- email: `hunter@thompson.com` (string) - The email that will be used as a login username
- password: `Hunter2` (string) - The desired password for the new user

## Session (object)
- token: `uep52qo8wfyh97b24fjafjewi9bb0r24` (string) - The session token